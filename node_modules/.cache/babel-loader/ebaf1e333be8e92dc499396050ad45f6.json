{"ast":null,"code":"var _jsxFileName = \"/home/aikye/React Course/section11.FoodAPP/01-starting-project/src/store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport CartContext from \"./cart-context\";\nimport { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n    const updatedItems = state.items.concat(action.item);\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  if (action.type === 'REMOVE') {}\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"irLoCnUjZMazMtjqft6WkB530Qg=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/home/aikye/React Course/section11.FoodAPP/01-starting-project/src/store/CartProvider.js"],"names":["CartContext","useReducer","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedTotalAmount","item","price","amount","existingCartItemIndex","findIndex","id","existingCartItem","updatedItems","concat","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,gBAAxB;AACA,SAASC,UAAT,QAA2B,OAA3B;;AAEA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,KAAK,EAAE,EADgB;AAEvBC,EAAAA,WAAW,EAAE;AAFU,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,MAAGA,MAAM,CAACC,IAAP,KAAe,KAAlB,EAAwB;AACtB,UAAMC,kBAAkB,GAAGH,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACG,IAAP,CAAYC,KAAZ,GAAkBJ,MAAM,CAACG,IAAP,CAAYE,MAA7E;AAEA,UAAMC,qBAAqB,GAAGP,KAAK,CAACH,KAAN,CAAYW,SAAZ,CAAsBJ,IAAI,IAAIA,IAAI,CAACK,EAAL,KAAYR,MAAM,CAACG,IAAP,CAAYK,EAAtD,CAA9B;AACA,UAAMC,gBAAgB,GAAGV,KAAK,CAACH,KAAN,CAAYU,qBAAZ,CAAzB;AACA,UAAMI,YAAY,GAAGX,KAAK,CAACH,KAAN,CAAYe,MAAZ,CAAmBX,MAAM,CAACG,IAA1B,CAArB;AACA,WAAO;AACLP,MAAAA,KAAK,EAAEc,YADF;AAELb,MAAAA,WAAW,EAAEK;AAFR,KAAP;AAID;;AACD,MAAGF,MAAM,CAACC,IAAP,KAAe,QAAlB,EAA2B,CAE1B;;AACD,SAAON,gBAAP;AACD,CAhBD;;AAkBA,MAAMiB,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAE9B,QAAM,CAACC,SAAD,EAAaC,kBAAb,IAAkCrB,UAAU,CAACI,WAAD,EAAaH,gBAAb,CAAlD;;AAGA,QAAMqB,oBAAoB,GAAIb,IAAD,IAAU;AACrCY,IAAAA,kBAAkB,CAAC;AAACd,MAAAA,IAAI,EAAC,KAAN;AAAYE,MAAAA,IAAI,EAACA;AAAjB,KAAD,CAAlB;AACD,GAFD;;AAIA,QAAMc,yBAAyB,GAAIT,EAAD,IAAQ;AACxCO,IAAAA,kBAAkB,CAAC;AAACd,MAAAA,IAAI,EAAC,QAAN;AAAeO,MAAAA,EAAE,EAACA;AAAlB,KAAD,CAAlB;AACD,GAFD;;AAIA,QAAMU,WAAW,GAAG;AAClBtB,IAAAA,KAAK,EAAEkB,SAAS,CAAClB,KADC;AAElBC,IAAAA,WAAW,EAAEiB,SAAS,CAACjB,WAFL;AAGlBsB,IAAAA,OAAO,EAAEH,oBAHS;AAIlBI,IAAAA,UAAU,EAAEH;AAJM,GAApB;AAOA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,WAA7B;AAAA,cACGL,KAAK,CAACQ;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAzBD;;GAAMT,Y;;KAAAA,Y;AA2BN,eAAeA,YAAf","sourcesContent":["import CartContext from \"./cart-context\";\nimport { useReducer } from \"react\";\n\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0,\n};\n\nconst cartReducer = (state, action) => {\n  if(action.type ==='ADD'){\n    const updatedTotalAmount = state.totalAmount + action.item.price*action.item.amount\n\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id)\n    const existingCartItem = state.items[existingCartItemIndex]\n    const updatedItems = state.items.concat(action.item)\n    return {\n      items :updatedItems,\n      totalAmount :updatedTotalAmount\n    }\n  }\n  if(action.type ==='REMOVE'){\n\n  }\n  return defaultCartState;\n};\n\nconst CartProvider = (props) => {\n\n  const [cartState , dispatchCartAction] =useReducer(cartReducer,defaultCartState)\n\n\n  const addItemToCartHandler = (item) => {\n    dispatchCartAction({type:'ADD',item:item})\n  };\n\n  const removeItemFromCartHandler = (id) => {\n    dispatchCartAction({type:'REMOVE',id:id})\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler,\n  };\n\n  return (\n    <CartContext.Provider value={cartContext}>\n      {props.children}\n    </CartContext.Provider>\n  );\n};\n\nexport default CartProvider;\n"]},"metadata":{},"sourceType":"module"}