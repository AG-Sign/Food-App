{"ast":null,"code":"var _jsxFileName = \"/home/aikye/React Course/section11.FoodAPP/01-starting-project/src/components/Cart/Cart.js\",\n    _s = $RefreshSig$();\n\nimport classes from \"./Cart.module.css\";\nimport Modal from \"../UI/Modal\";\nimport React, { useContext, useState } from \"react\";\nimport CartContext from \"../../store/cart-context\";\nimport CartItem from \"./CartItem\";\nimport Checkout from \"./Checkout\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = props => {\n  _s();\n\n  const [isCheckout, setIsCheckout] = useState(false);\n  const cartCtx = useContext(CartContext);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [isDidSubmit, setIsDidSubmt] = useState(false);\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n  const hasItems = cartCtx.items.length > 0;\n\n  const orderHandler = () => {\n    setIsCheckout(true);\n  };\n\n  const cartItemRemoveHandler = id => {\n    cartCtx.removeItem(id);\n  };\n\n  const cartItemAddHandler = item => {\n    cartCtx.addItem({ ...item,\n      amount: 1\n    });\n  };\n\n  const confirmHandler = async userData => {\n    setIsSubmitting(true);\n    await fetch('https://react-http-2b2fa-default-rtdb.firebaseio.com/orders.json', {\n      method: 'POST',\n      body: JSON.stringify({\n        user: userData,\n        items: cartCtx.items\n      })\n    });\n    setIsSubmitting(false);\n    setIsDidSubmt(true);\n  };\n\n  const cartItems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: classes[\"cart-items\"],\n    children: cartCtx.items.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      name: item.name,\n      price: item.price,\n      amount: item.amount,\n      onAdd: cartItemAddHandler.bind(null, item),\n      onRemove: cartItemRemoveHandler.bind(null, item.id)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n\n  const cartModalContent = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [cartItems, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.total,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Total Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: totalAmount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), isCheckout && /*#__PURE__*/_jsxDEV(Checkout, {\n      onConfirm: confirmHandler,\n      onCancel: props.onHideCart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 22\n    }, this), !isCheckout && modalActions]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 28\n  }, this);\n\n  const modalActions = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.actions,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes[\"button--alt\"],\n      onClick: props.onHideCart,\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), hasItems && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes.button,\n      onClick: orderHandler,\n      children: \"Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: props.onHideCart\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cart, \"biYIqrK3WeOrKCCqp/7Ea77rlS4=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["/home/aikye/React Course/section11.FoodAPP/01-starting-project/src/components/Cart/Cart.js"],"names":["classes","Modal","React","useContext","useState","CartContext","CartItem","Checkout","Cart","props","isCheckout","setIsCheckout","cartCtx","isSubmitting","setIsSubmitting","isDidSubmit","setIsDidSubmt","totalAmount","toFixed","hasItems","items","length","orderHandler","cartItemRemoveHandler","id","removeItem","cartItemAddHandler","item","addItem","amount","confirmHandler","userData","fetch","method","body","JSON","stringify","user","cartItems","map","name","price","bind","cartModalContent","total","onHideCart","modalActions","actions","button"],"mappings":"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","sourcesContent":["import classes from \"./Cart.module.css\";\nimport Modal from \"../UI/Modal\";\nimport React, { useContext, useState } from \"react\";\nimport CartContext from \"../../store/cart-context\";\nimport CartItem from \"./CartItem\";\nimport Checkout from \"./Checkout\";\n\nconst Cart = (props) => {\n  const [isCheckout, setIsCheckout] = useState(false);\n  const cartCtx = useContext(CartContext);\n  const [isSubmitting , setIsSubmitting] = useState(false)\n  const [isDidSubmit , setIsDidSubmt] = useState(false)\n\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n  const hasItems = cartCtx.items.length > 0;\n\n  const orderHandler = () => {\n    setIsCheckout(true);\n  };\n\n  const cartItemRemoveHandler = (id) => {\n    cartCtx.removeItem(id);\n  };\n\n  const cartItemAddHandler = (item) => {\n    cartCtx.addItem({ ...item, amount: 1 });\n  };\n\n  const confirmHandler = async userData =>{\n    setIsSubmitting(true)\n    await fetch('https://react-http-2b2fa-default-rtdb.firebaseio.com/orders.json',{\n      method:'POST',\n      body:JSON.stringify({\n        user:userData,\n        items:cartCtx.items\n      })\n    })\n    setIsSubmitting(false)\n    setIsDidSubmt(true)\n  }\n\n  const cartItems = (\n    <ul className={classes[\"cart-items\"]}>\n      {cartCtx.items.map((item) => (\n        <CartItem\n          key={item.id}\n          name={item.name}\n          price={item.price}\n          amount={item.amount}\n          onAdd={cartItemAddHandler.bind(null, item)}\n          onRemove={cartItemRemoveHandler.bind(null, item.id)}\n        />\n      ))}\n    </ul>\n  );\n\n  const cartModalContent = <React.Fragment>\n{cartItems}\n      <div className={classes.total}>\n        <span>Total Amount</span>\n        <span>{totalAmount}</span>\n      </div>\n      {isCheckout && <Checkout onConfirm={confirmHandler} onCancel ={props.onHideCart}/>}\n      {!isCheckout && modalActions}\n  </React.Fragment>\n\n  const modalActions = (\n    <div className={classes.actions}>\n      <button className={classes[\"button--alt\"]} onClick={props.onHideCart}>\n        Close\n      </button>\n      {hasItems && (\n        <button className={classes.button} onClick={orderHandler}>\n          Order\n        </button>\n      )}\n    </div>\n  );\n\n  return (\n    <Modal onClose={props.onHideCart}>\n      \n    </Modal>\n  );\n};\n\nexport default Cart;\n"]},"metadata":{},"sourceType":"module"}