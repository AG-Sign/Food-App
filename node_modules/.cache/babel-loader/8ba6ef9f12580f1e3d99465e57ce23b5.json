{"ast":null,"code":"var _jsxFileName = \"/home/aikye/React Course/section11.FoodAPP/01-starting-project/src/components/Meals/AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport classes from \"./AvailableMeals.module.css\";\nimport Card from \"../UI/Card\";\nimport MealItem from \"./MealItem/MealItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailableMeals = () => {\n  _s();\n\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState(null);\n  useEffect(() => {\n    const fetchMeals = async () => {\n      const response = await fetch(\"https://react-http-2b2fa-default-rtdb.firebaseio.com/meals.json\");\n\n      if (!response.ok) {\n        throw new Error('Something is wrong!!');\n      }\n\n      const responseData = await response.json();\n      const loadedMeals = [];\n\n      for (const key in responseData) {\n        loadedMeals.push({\n          id: key,\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price: responseData[key].price\n        });\n      }\n\n      setMeals(loadedMeals);\n      setIsLoading(false);\n    };\n\n    try {\n      fetchMeals().catch(err => {\n        setIsLoading(false);\n        setHttpError(err.message);\n      });\n    } catch (err) {}\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.mealsLoading,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (httpError) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.mealsError,\n      children: httpError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 12\n    }, this);\n  }\n\n  const mealsList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    name: meal.name,\n    description: meal.description,\n    price: meal.price,\n    id: meal.id\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AvailableMeals, \"kxx7agcThrGRRGnIws8GiemuDlA=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["/home/aikye/React Course/section11.FoodAPP/01-starting-project/src/components/Meals/AvailableMeals.js"],"names":["React","useEffect","useState","classes","Card","MealItem","AvailableMeals","meals","setMeals","isLoading","setIsLoading","httpError","setHttpError","fetchMeals","response","fetch","ok","Error","responseData","json","loadedMeals","key","push","id","name","description","price","catch","err","message","mealsLoading","mealsError","mealsList","map","meal"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,QAAP,MAAqB,qBAArB;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,SAAD,EAAaC,YAAb,IAA6BR,QAAQ,CAAC,IAAD,CAA3C;AACA,QAAM,CAACS,SAAD,EAAaC,YAAb,IAA6BV,QAAQ,CAAC,IAAD,CAA3C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,UAAU,GAAG,YAAY;AAC7B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,iEAD0B,CAA5B;;AAGA,UAAG,CAACD,QAAQ,CAACE,EAAb,EAAgB;AACd,cAAM,IAAIC,KAAJ,CAAU,sBAAV,CAAN;AACD;;AACD,YAAMC,YAAY,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAA3B;AAEA,YAAMC,WAAW,GAAG,EAApB;;AACA,WAAK,MAAMC,GAAX,IAAkBH,YAAlB,EAAgC;AAC9BE,QAAAA,WAAW,CAACE,IAAZ,CAAiB;AACfC,UAAAA,EAAE,EAAEF,GADW;AAEfG,UAAAA,IAAI,EAAEN,YAAY,CAACG,GAAD,CAAZ,CAAkBG,IAFT;AAGfC,UAAAA,WAAW,EAAEP,YAAY,CAACG,GAAD,CAAZ,CAAkBI,WAHhB;AAIfC,UAAAA,KAAK,EAAER,YAAY,CAACG,GAAD,CAAZ,CAAkBK;AAJV,SAAjB;AAMD;;AACDlB,MAAAA,QAAQ,CAACY,WAAD,CAAR;AACAV,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KApBD;;AAqBA,QAAG;AAEDG,MAAAA,UAAU,GAAGc,KAAb,CAAmBC,GAAG,IAAG;AAEvBlB,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,QAAAA,YAAY,CAACgB,GAAG,CAACC,OAAL,CAAZ;AACD,OAJD;AAKD,KAPD,CAOC,OAAMD,GAAN,EAAU,CACV;AACF,GA/BQ,EA+BN,EA/BM,CAAT;;AAiCA,MAAGnB,SAAH,EAAa;AACX,wBAAO;AAAS,MAAA,SAAS,EAAEN,OAAO,CAAC2B,YAA5B;AAAA,6BACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADK;AAAA;AAAA;AAAA;AAAA,YAAP;AAGD;;AAED,MAAGnB,SAAH,EAAa;AACX,wBAAO;AAAS,MAAA,SAAS,EAAER,OAAO,CAAC4B,UAA5B;AAAA,gBACJpB;AADI;AAAA;AAAA;AAAA;AAAA,YAAP;AAGD;;AAED,QAAMqB,SAAS,GAAGzB,KAAK,CAAC0B,GAAN,CAAWC,IAAD,iBAC1B,QAAC,QAAD;AACE,IAAA,IAAI,EAAEA,IAAI,CAACV,IADb;AAEE,IAAA,WAAW,EAAEU,IAAI,CAACT,WAFpB;AAGE,IAAA,KAAK,EAAES,IAAI,CAACR,KAHd;AAKE,IAAA,EAAE,EAAEQ,IAAI,CAACX;AALX,KAIOW,IAAI,CAACX,EAJZ;AAAA;AAAA;AAAA;AAAA,UADgB,CAAlB;AASA,sBACE;AAAS,IAAA,SAAS,EAAEpB,OAAO,CAACI,KAA5B;AAAA,2BACE,QAAC,IAAD;AAAA,6BACE;AAAA,kBAAKyB;AAAL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAlED;;GAAM1B,c;;KAAAA,c;AAmEN,eAAeA,cAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport classes from \"./AvailableMeals.module.css\";\nimport Card from \"../UI/Card\";\nimport MealItem from \"./MealItem/MealItem\";\n\nconst AvailableMeals = () => {\n  const [meals, setMeals] = useState([]);\n  const [isLoading , setIsLoading] = useState(true)\n  const [httpError , setHttpError] = useState(null)\n\n  useEffect(() => {\n    const fetchMeals = async () => {\n      const response = await fetch(\n        \"https://react-http-2b2fa-default-rtdb.firebaseio.com/meals.json\"\n      );\n      if(!response.ok){\n        throw new Error('Something is wrong!!')\n      }\n      const responseData = await response.json();\n\n      const loadedMeals = [];\n      for (const key in responseData) {\n        loadedMeals.push({\n          id: key,\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price: responseData[key].price,\n        });\n      }\n      setMeals(loadedMeals);\n      setIsLoading(false)\n    };\n    try{\n\n      fetchMeals().catch(err =>{\n\n        setIsLoading(false)\n        setHttpError(err.message)\n      });\n    }catch(err){\n    }\n  }, []);\n\n  if(isLoading){\n    return <section className={classes.mealsLoading}>\n      <p>Loading....</p>\n    </section>\n  }\n\n  if(httpError){\n    return <section className={classes.mealsError}>\n      {httpError}\n    </section>\n  }\n\n  const mealsList = meals.map((meal) => (\n    <MealItem\n      name={meal.name}\n      description={meal.description}\n      price={meal.price}\n      key={meal.id}\n      id={meal.id}\n    />\n  ));\n  return (\n    <section className={classes.meals}>\n      <Card>\n        <ul>{mealsList}</ul>\n      </Card>\n    </section>\n  );\n};\nexport default AvailableMeals;\n"]},"metadata":{},"sourceType":"module"}